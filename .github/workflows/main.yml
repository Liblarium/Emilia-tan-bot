name: CI Lint & Check

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  lint:
    runs-on: self-hosted

    steps:
      - name: Send notification
        run: |
          $repo = "${{ github.repository }}"
          $msg = "${{ github.event.head_commit.message }}"
          $url = "${{ github.event.head_commit.url }}"
          $time = "${{ github.event.head_commit.timestamp }}"
          $author = "${{ github.event.head_commit.author.name }}"

          $payload = @{
            content = "**Новый коммит в репозитории!**"
            embeds = @(@{
              title = $repo
              description = $msg
              url = $url
              timestamp = $time
              footer = @{ text = $author }
              color = 5814783
            })
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri "${{ secrets.DISCORD_WEBHOOK }}" -Method POST -ContentType "application/json" -Body $payload
        shell: pwsh


      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Add pnpm in PATH
        run: echo "PATH=$env:Path;C:\Users\${{ secrets.USERNAME }}\AppData\Roaming\pnpm" >> $GITHUB_ENV
        shell: pwsh

      - name: Install dependencies
        run: pnpm install
          
      - name: Cache usage 
        uses: actions/cache@v3 
        with: 
          path: "${{ secrets.USERNAME }}\\AppData\\Roaming\\pnpm" 
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run biome check
        run: npx biome check . --write

      - name: Run linter
        run: pnpm run lint

      - name: Run prettier check
        run: pnpm run format -- --check
