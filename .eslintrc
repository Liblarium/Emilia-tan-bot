{
  "env": {
    "browser": true,
    "commonjs": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:jsdoc/recommended-typescript",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:import-x/recommended",
    "plugin:import-x/typescript",
    "plugin:eslint-plugin/recommended",
    "plugin:regexp/recommended",
    "plugin:n/recommended",
    "plugin:promise/recommended",
    "plugin:functional/recommended",
    "plugin:jsonc/recommended-with-jsonc",
    "plugin:jsx-a11y/recommended",
    "plugin:n/recommended",
    "plugin:regexp/recommended",
    "plugin:security/recommended-legacy",
    "plugin:sonarjs/recommended-legacy",
    "plugin:@vitest/legacy-recommended",
    "plugin:drizzle/recommended"
  ],
  "parserOptions": {
    "extraFileExtensions": [
      ".json"
    ],
    "ecmaVersion": "latest",
    "project": "tsconfig.json"
  },
  "parser": "@typescript-eslint/parser",
  "root": true,
  "plugins": [
    "@typescript-eslint",
    "sonarjs",
    "@vitest/eslint-plugin",
    "use-decorator",
    "unused-imports",
    "unicorn",
    "tsdoc",
    "no-secrets",
    "html",
    "import-x"
  ],
  "globals": {
    "process": true,
    "es2020": true,
    "node": true,
    "browser": true,
    "builtin": true
  },
  "ignorePatterns": [
    "node_modules/",
    "srcJs/",
    "Logs/",
    "biome.json",
    "tsconfig.json",
    "package.json",
    "*.js",
    "*.",
    "*.json",
    "*.cjs",
    "abyss/",
    "canvas/",
    "vitest.config.ts",
    "*/**/*.deprecation",
    "*.yaml",
    "*.yml",
    "test_*/",
    "tsconfig.*.json",
    "drizzle",
    "drizzle.config.ts"
  ],
  "overrides": [
    {
      "files": [
        "srcTs/**/*.ts",
        "srcTs/**/*.mts",
        "types/**/*.d.ts",
        "drizzle.config.ts"
      ]
    },
    {
      "files": [
        "log/**/*.ts"
      ],
      "settings": {
        "typescript": {
          "alwaysTryTypes": true,
          "project": "./log/tsconfig.json"
        },
        "node": {
          "extensions": [
            ".ts"
          ]
        }
      }
    },
    {
      "files": [
        "./graphql/*.ts"
      ],
      "settings": {
        "import-x/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": "./graphql/tsconfig.json"
          },
          "node": {
            "extensions": [
              ".ts"
            ],
            "alias": {
              "@type": "./types",
              "@client": "./srcTs/client",
              "@base": "./srcTs/base",
              "@util": "./srcTs/util",
              "@util/s": "./srcTs/utils.ts",
              "@log": "./srcTs/log",
              "@handlers": "./srcTs/handlers",
              "@database": "./srcTs/database"
            }
          }
        }
      }
    }
  ],
  "rules": {
    "indent": "off",
    "comma-dangle": [
      "error",
      "only-multiline"
    ],
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "jsdoc/require-description": "off",
    "jsdoc/require-param-description": "off",
    "jsdoc/valid-type": "off",
    "jsdoc/no-undefined-types": "off",
    "jsdoc/require-returns-description": "off",
    "jsdoc/no-defaults": "off",
    "jsdoc/check-alignment": "off",
    "import/no-unresolved": "off",
    "unused-imports/no-unused-imports": "error",
    "unicorn/prevent-abbreviations": "off",
    "semi": "off",
    "@typescript-eslint/semi": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "no-unused-vars": "off",
    "n/exports-style": [
      "error",
      "module.exports"
    ],
    "eslint-plugin/require-meta-docs-description": "error",
    "import-x/namespace": "off",
    "unicorn/better-regex": "error",
    "n/no-missing-import": "off",
    "functional/functional-parameters": "off",
    "functional/no-expression-statements": "off",
    "functional/no-classes": "off",
    "functional/no-throw-statements": "off",
    "security/detect-object-injection": "off",
    "functional/no-return-void": "off",
    "functional/no-let": "off",
    "functional/no-conditional-statements": "off",
    "functional/no-loop-statements": "off",
    "functional/immutable-data": "off",
    "@typescript-eslint/no-redundant-type-constituents": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/only-throw-error": "off",
    "functional/no-mixed-types": "off", //i micsed types)
    "functional/prefer-immutable-types": "off", //No. Off you
    "@typescript-eslint/prefer-literal-enum-member": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "n/no-unpublished-import": "off",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "security/detect-non-literal-fs-filename": "off",
    "@typescript-eslint/no-invalid-void-type": "off",
    "n/no-unsupported-features/node-builtins": "off",
    "n/no-extraneous-import": "off",
    "@typescript-eslint/require-await": "off",
    "jsdoc/require-jsdoc": "off"
  },
  "settings": {
    "html/html-extensions": [
      ".html",
      ".we"
    ],
    "import-x/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".mts"
      ]
    },
    "import-x/extensions": [
      ".ts",
      ".mts"
    ],
    "import-x/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      },
      "node": {
        "extensions": [
          ".ts",
          ".mts"
        ],
        "alias": {
          "@type": "./types",
          "@client": "./srcTs/client",
          "@base": "./srcTs/base",
          "@util": "./srcTs/util",
          "@utils_": "./srcTs/utils.ts",
          "@log": "./log/src",
          "@handlers": "./srcTs/handlers",
          "@api-types": "types/api"
        }
      }
    }
  }
}